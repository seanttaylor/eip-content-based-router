version: "3.8"

services:
  message_router:
    container_name: message_router
    build:
      context: .
      dockerfile: ./docker/Dockerfile.router
    environment:
      APP_NAME: message-router
      APP_VERSION: "0.0.1"
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_CLIENT_ID: froyo
      KAFKA_GROUP_ID: froyo_group
    volumes:
      - ./:/src
    networks:
      - shared_network
    depends_on:
      - kafka
    restart: always
#  kosher_filter:
#    container_name: kosher_filter
#    build:
#      context: .
#      dockerfile: ./docker/Dockerfile.kosher
#    environment:
#      APP_NAME: kosher-filter
#      APP_VERSION: "0.0.1"
#      KAFKA_BOOTSTRAP_SERVER: kafka:9092
#      KAFKA_CLIENT_ID: custard
#      KAFKA_GROUP_ID: custard_group
#    volumes:
#      - ./:/src
#    networks:
#     - shared_network
#    depends_on:
#      - kafka
#  trefa_filter:
#    container_name: trefa_filter
#    build:
#      context: .
#      dockerfile: ./docker/Dockerfile.trefa
#    environment:
#      APP_NAME: trefa-filter
#      APP_VERSION: "0.0.1"
#      KAFKA_BOOTSTRAP_SERVER: kafka:9092
#      KAFKA_CLIENT_ID: custard
#      KAFKA_GROUP_ID: custard_group
#    volumes:
#      - ./:/src
#    networks:
#      - shared_network
#    depends_on:
#      - kafka
  ingress_service:
    container_name: ingress_service
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      APP_NAME: ice_cream_pipeline
      APP_VERSION: "0.0.1"
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_CLIENT_ID: sherbert
      KAFKA_GROUP_ID: sherbert_group
    volumes:
      - ./:/src
    depends_on:
      - kafka
    networks:
      - shared_network
    restart: always
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - shared_network
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on: 
      - zookeeper
    ports:
      - 9092:9092
    environment: 
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ingress:1:1,kosher:1:1,trefa:1:1"
    networks:
      - shared_network    
  kowl:
    image: quay.io/cloudhut/kowl:v1.3.1
    container_name: kowl
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - shared_network
networks:
  shared_network: